module RbNaCl
  module Sodium
    def primitive: () -> Symbol

    def sodium_constant: (Symbol constant, ?name: Symbol, ?fallback: ^() -> void) -> untyped

    def sodium_function: (Symbol name, Symbol function, Array[Symbol] arguments) -> bool

    def sodium_function_with_return_code: (Symbol name, Symbol function, Array[Symbol] arguments) -> bool

    def sodium_primitive: (?Symbol primitive) -> Symbol

    def sodium_type: (?Symbol `type`) -> Symbol

    module Version
      def self.supported_version?: (String) -> bool
    end
  end

  module Random
    def self.random_bytes: (Integer) -> String
  end

  module Hash
    def self.blake2b: (String, ?key: String, ?digest_size: Integer, ?salt: String, ?personal: String) -> untyped
  end
  
  class CryptoError < StandardError
  end

  module Util
    def self.zeros: (Integer) -> String
    def self.check_length: (String n, Integer l, String desc) -> bool
    def self.check_string: (String s, Integer l, String desc) -> String
  end
end
