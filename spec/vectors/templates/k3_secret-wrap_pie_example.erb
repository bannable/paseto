  it '<%= name %>' do
    <%- if unwrapped -%>
    unwrapped = '<%= unwrapped %>'
    <%- end -%>
    wrapping_key = Paseto::V3::Local.new(ikm: Paseto::Util.decode_hex('<%= wrapping_key %>'))
    <%- if public_key -%>
    public_key = <%= ["#{public_key}0A"].pack("H*").inspect %>
    <%- end -%>
    paserk = '<%= paserk %>'
    nonce = Paseto::Util.decode_hex('63bb3202832c059662ed9949e3116b78b7428bb7105a9207dde8d443958844c4')

    <%- if expect_fail -%>
    passed = false
    begin
      wrapping_key.unwrap(paserk)
    rescue Paseto::InvalidAuthenticator, Paseto::LucidityError
      passed = true
    end
    expect(passed).to be true
    <%- else -%>
    key = wrapping_key.unwrap(paserk)
    <%- if unwrapped -%>
    expect(key.to_bytes.unpack1('H*')).to eq(unwrapped)
    <%- end -%>
    expect(key.public_to_pem).to eq(public_key)
    expect(wrapping_key.wrap(key)).to start_with('k3.secret-wrap.pie.')
    <%- end -%>
  end
